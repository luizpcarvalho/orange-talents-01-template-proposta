# app config
server.port=8081

# database
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:5432/proposta
spring.datasource.username=${PROPOSTA_DATABASE_USERNAME:keycloak}
spring.datasource.password=${PROPOSTA_DATABASE_PASSWORD:password}

# jpa
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.hibernate-plataform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.batch_size=5

# actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}
management.health.probes.enabled=true
management.endpoint.health.status.http-mapping.down=503
management.endpoint.health.status.http-mapping.fatal=503
management.endpoint.health.status.http-mapping.out-of-service=503

# scheduled
periodicidade.associa-cartao=${PERIODICIDADE_ASSOCIA_CARTAO:5000}

# docker-compose
host.contas=${HOST_CONTAS:localhost:8888}
host.analise=${HOST_CARTOES:localhost:9999}

# keycloak
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://${KEYCLOAK_HOST:localhost:18080}/auth/realms/nosso-cartao
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://${KEYCLOAK_HOST:localhost:18080}/auth/realms/nosso-cartao/protocol/openid-connect/certs

# jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name:propostas}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.spring.cloud.jdbc.enabled=false

# encryptor
encryptor.secret.key=${SECRET_KEY:1234567891011121}
encryptor.secret.salt=${SECRET_SALT:123456}